reticulate::repl_python()
x = 5
print(x)
type(x)
y = "This is a string"
type(y)
t = [3,6,9,12,15,20]
type(t)
z = 1 + x
print(z)
y = z * 4
print(y)
w =  "This is" + " a string"
print(w)
majors = ["computer science", "psychology", "neuroscience"]
for x in majors:
print(x)
majors = ["computer science", "psychology", "neuroscience"]
for words in majors:
print(words)
for words in majors:
if words == 'psychology':
print(words)
import pandas as pd
data = {'trial' : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], 'rt' : [2.5, 4, 8.7, 1.2, 7.8, 3, 4.5, 6, 2, 2.3, 7.9, 1.2, 1.4, 5, 2.3, 4.1, 3, 4.7, 1.8, 2]}
df = pd.DataFrame(data=data)
print(df)
n = 0
while n < 10:
print(df.iloc[n]['rt'])
n += 1
def my_function():
print("I pass butter")
my_function()
def my_instructions():
print("Raise your hand if you need help!")
my_instructions()
iq_score = [100, 89, 72, 108, 120, 78, 86, 91, 95, 82]
happiness_rating = [0, 2, 7, 2, 8, 10, 9, 0, 5, 10]
def mean(fname):
num_variable = len(fname)
sum_variable = sum(fname)
avg_variable = sum_variable/num_variable
print("The average is:")
print(avg_variable)
mean(iq_score)
mean(happiness_rating)
x = [12, 5, 6, 13, 14, 3, 9]
print(x[2:6])
print(x[:5])
import pandas
import pandas as pd
from pandas import Series
path = "C:/Users/wjpmi/Documents/GitHub/intro-to-coding-2023/"
df = pd.read_csv(path + 'data/unrestricted_kjobson_4_8_2022_11_19_20.csv')
print(path + 'data/unrestricted_kjobson_4_8_2022_11_19_20.csv')
print(df)
df[:5]
df.iloc[:, :5]
df.columns
#if you want Python to print all of the column names, you need to tell it to do so when there are this many
#you can override the default by using this command:
#pd.set_option('display.max_columns', None)
#then you can run the same command again - keep in mind, this is a global setting that changes it for everything!
df['Subject']
#Pittsburgh Sleep Quality Index
print(df['PSQI_Score'])
psqi = df['PSQI_Score']
type(psqi)
#Total Grey Matter Volume calulcated from a program called FreeSurfer
print(df['FS_Total_GM_Vol'])
gm_vol = df['FS_Total_GM_Vol']
sleep = pd.DataFrame(columns=['PSQI','GM_Volume'])
sleep['PSQI'] = psqi
sleep['GM_Volume'] = gm_vol
print(sleep)
sub = df['Subject']
full_mr = df['3T_Full_MR_Compl']
gender = df['Gender']
age = df['Age']
sleep = pd.DataFrame(columns=['Subject', 'Gender','Age','Full_MR','PSQI','GM_Volume'])
sleep['Subject'] = sub
sleep['Gender'] = gender
sleep['Age'] = age
sleep['Full_MR'] = full_mr
sleep['PSQI'] = psqi
sleep['GM_Volume'] = gm_vol
print(sleep)
sleep_row_clean = sleep.dropna()
print(sleep_row_clean)
sleep_column_clean = sleep.dropna(axis=1)
print(sleep_column_clean)
sleep = sleep[sleep['Full_MR'] == True]
print(sleep)
sleep_m = sleep[sleep['Gender'] == 'M']
print(sleep_m)
sleep.to_csv(path + 'misc/logs/sleep_data.csv')
subs_10 = df.loc[:10, "Subject"]
for k in subs_10:
sub_k = df[df['Subject'] == k]
sub_k.to_csv(path + f"{k}_data.csv")
new_sleep_10 = pd.DataFrame(columns=['Subject', 'Gender','Age','3T_Full_MR_Compl','PSQI_Compl','FS_Total_GM_Vol'])
columns = ['Subject', 'Gender','Age','3T_Full_MR_Compl','PSQI_Compl','FS_Total_GM_Vol']
for k in subs_10:
new_sub = pd.read_csv(path + f"{k}_data.csv")
sleep_sub_k = pd.DataFrame(columns=columns)
new_sleep_10 = new_sleep_10.append(new_sub)
quit
gc()
reticulate::repl_python()
x = 5
print(x)
%reset -f
reticulate::repl_python()
x = 5
print(x)
quit
source("~/.active-rstudio-document", echo=TRUE)
reticulate::repl_python()
x = 5
print(x)
reticulate::repl_python()
x = 5
print(x)
type(x)
y = "This is a string"
type(y)
t = [3,6,9,12,15,20]
type(t)
string = [ ]
numeric = [ ]
import pandas as pd
data = {'trial' : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], 'rt' : [2.5, 4, 8.7, 1.2, 7.8, 3, 4.5, 6, 2, 2.3, 7.9, 1.2, 1.4, 5, 2.3, 4.1, 3, 4.7, 1.8, 2]}
df = pd.DataFrame(data=data)
View(df)
n = 0
while n < 10:
print(df.iloc[n]['rt'])
n += 1
iq_score = [100, 89, 72, 108, 120, 78, 86, 91, 95, 82]
happiness_rating = [0, 2, 7, 2, 8, 10, 9, 0, 5, 10]
def mean(fname):
num_variable = len(fname)
sum_variable = sum(fname)
avg_variable = sum_variable/num_variable
print("The average is:")
print(avg_variable)
mean(iq_score)
mean(happiness_rating)
import pandas
import pandas as pd
from pandas import Series
path = "C:/Users/wjpmi/Documents/GitHub/intro-to-coding-2023/"
df = pd.read_csv(path + 'data/unrestricted_kjobson_4_8_2022_11_19_20.csv')
print(path + 'data/unrestricted_kjobson_4_8_2022_11_19_20.csv')
df[:5]
df.iloc[:, :5]
df.columns
#if you want Python to print all of the column names, you need to tell it to do so when there are this many
#you can override the default by using this command:
#pd.set_option('display.max_columns', None)
#then you can run the same command again - keep in mind, this is a global setting that changes it for everything!
df['Subject']
df['Subject']
#Pittsburgh Sleep Quality Index
print(df['PSQI_Score'])
psqi = df['PSQI_Score']
type(psqi)
#Total Grey Matter Volume calulcated from a program called FreeSurfer
print(df['FS_Total_GM_Vol'])
gm_vol = df['FS_Total_GM_Vol']
sleep = pd.DataFrame(columns=['PSQI','GM_Volume'])
sleep['PSQI'] = psqi
sleep['GM_Volume'] = gm_vol
print(sleep)
print(sleep)
View(sleep)
sub = df['Subject']
full_mr = df['3T_Full_MR_Compl']
gender = df['Gender']
age = df['Age']
sleep = pd.DataFrame(columns=['Subject', 'Gender','Age','Full_MR','PSQI','GM_Volume'])
sleep['Subject'] = sub
sleep['Gender'] = gender
sleep['Age'] = age
sleep['Full_MR'] = full_mr
sleep['PSQI'] = psqi
sleep['GM_Volume'] = gm_vol
print(sleep)
sleep_row_clean = sleep.dropna()
print(sleep_row_clean)
sleep_column_clean = sleep.dropna(axis=1)
print(sleep_column_clean)
sleep = sleep[sleep['Full_MR'] == True]
print(sleep)
sleep_m = sleep[sleep['Gender'] == 'M']
print(sleep_m)
subs_10 = df.loc[:10, "Subject"]
for k in subs_10:
sub_k = df[df['Subject'] == k]
sub_k.to_csv(path + f"{k}_data.csv")
output = "C:/Users/wjpmi/Documents/GitHub/intro-to-coding-2023/python/"
subs_10 = df.loc[:10, "Subject"]
for k in subs_10:
sub_k = df[df['Subject'] == k]
sub_k.to_csv(output + f"{k}_data.csv")
new_sleep_10 = pd.DataFrame(columns=['Subject', 'Gender','Age','3T_Full_MR_Compl','PSQI_Compl','FS_Total_GM_Vol'])
columns = ['Subject', 'Gender','Age','3T_Full_MR_Compl','PSQI_Compl','FS_Total_GM_Vol']
View(new_sleep_10)
k = subs_10[0]
new_sub = pd.read_csv(output + f"{k}_data.csv")
sleep_sub_k = pd.DataFrame(columns=columns)
View(sleep_sub_k)
for k in subs_10:
new_sub = pd.read_csv(output + f"{k}_data.csv")
new_sub = pd.read_csv(output + f"{k}_data.csv")
sleep_sub_k = pd.DataFrame(columns=columns)
new_sleep_10 = new_sleep_10.concat(new_sub)
columns = ['Subject', 'Gender','Age','3T_Full_MR_Compl','PSQI_Compl','FS_Total_GM_Vol']
new_sleep_10 = pd.DataFrame(columns=columns)
for k in subs_10:
new_sub = pd.read_csv(output + f"{k}_data.csv")
new_sleep_10 = new_sleep_10.concat(new_sub)
columns = ['Subject', 'Gender','Age','3T_Full_MR_Compl','PSQI_Compl','FS_Total_GM_Vol']
new_sleep_10 = pd.DataFrame(columns=columns)
for k in subs_10:
new_sub = pd.read_csv(output + f"{k}_data.csv")
new_sleep_10 = pd.concat([new_sleep_10, new_sub], ignore_index=True)
View(new_sleep_10)
columns = ['Subject', 'Gender','Age','3T_Full_MR_Compl','PSQI_Compl','FS_Total_GM_Vol']
new_sleep_10 = pd.DataFrame(columns=columns)
for k in subs_10:
new_sub = pd.read_csv(output + f"{k}_data.csv")
new_sub = pd.DataFrame(columns=columns)
new_sleep_10 = pd.concat([new_sleep_10, new_sub], ignore_index=True)
columns = ['Subject', 'Gender','Age','3T_Full_MR_Compl','PSQI_Compl','FS_Total_GM_Vol']
new_sleep_10 = pd.DataFrame(columns=columns)
new_sub = pd.read_csv(output + f"{k}_data.csv")
columns = ['Subject', 'Gender','Age','3T_Full_MR_Compl','PSQI_Compl','FS_Total_GM_Vol']
new_sleep_10 = pd.DataFrame(columns=columns)
for k in subs_10:
new_sub = pd.read_csv(output + f"{k}_data.csv")
new_sub = new_sub[[columns]]
new_sleep_10 = pd.concat([new_sleep_10, new_sub], ignore_index=True)
columns = ['Subject', 'Gender','Age','3T_Full_MR_Compl','PSQI_Compl','FS_Total_GM_Vol']
new_sleep_10 = pd.DataFrame(columns=columns)
for k in subs_10:
new_sub = pd.read_csv(output + f"{k}_data.csv")
new_sub = new_sub.loc[:,columns]
new_sleep_10 = pd.concat([new_sleep_10, new_sub], ignore_index=True)
View(new_sleep_10)
sleep_10_avg = new_sleep_10.groupby(level=0).mean()
print(sleep_10_avg)
sleep_10_avg = new_sleep_10.mean()
print(sleep_10_avg)
